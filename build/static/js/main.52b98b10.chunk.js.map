{"version":3,"sources":["CharCard.js","OpponentCard.js","HandStatus.js","API.js","CardContainer.js","GameDisplay.js","WinMessage.js","LoseMessage.js","components/CountDownTimer.js","components/Instructions.js","GameContainer.js","WelcomePage.js","components/ScoreCard.js","containers/HighScoreContainer.js","App.js","serviceWorker.js","index.js"],"names":["CharCard","state","clickable","handleClick","attributeKey","attributeValue","_this","props","setCard","setState","prevProps","this","card","_this2","react_default","a","createElement","Card","className","Image","src","imageurl","wrapped","ui","Content","Header","name","Description","description","extra","List","Item","onClick","apperception","charm","aggression","React","Component","OpponentCard","showCardStats","GameDisplay","as","block","currentUser","cardCount","endpoint","cardsUrl","concat","signupUrl","loginUrl","validateUrl","totalsUrl","gameUrl","jsonify","res","ok","json","then","data","errors","handleServerError","console","error","constructHeaders","moreHeaders","arguments","length","undefined","Object","objectSpread","Authorization","localStorage","getItem","API","signUp","user","fetch","method","headers","Content-Type","body","JSON","stringify","log","token","setItem","catch","logIn","validateUser","Promise","resolve","clearToken","removeItem","cards","fetchTotalScores","postGame","game","CardContainer","allCards","Fragment","Grid","columns","relaxed","Column","src_CharCard","userCard","setUserCard","setClickStatusTrue","HandStatus","userCardCount","src_OpponentCard","oppCard","oppCardCount","Divider","vertical","divStyle","gameStatus","color","winOrLose","style","WinMessage","winningScore","LoseMessage","timerState","CountDownTimer","_ref","setTimerState","build","initialTime","direction","checkpoints","time","callback","_ref2","getTimerState","Minutes","Seconds","Instructions","Container","text","GameContainer","userIndexCounter","oppIndexCounter","userAllCards","oppAllCards","gameStart","userWon","oppWon","attributeClicked","getCards","startGame","newCards","shuffleArray","userCards","slice","oppCards","temporaryValue","randomIndex","currentIndex","Math","floor","random","timeLeft","score","user_id","currentUserObj","id","userCardsLength","oppCardsLength","setTimeout","winnerText","continueGameOppCards","filter","toConsumableArray","loserText","newUserCards","clearUserState","history","push","setCurrentUserFromToken","_this$state","src_WinMessage","src_LoseMessage","Button","NavLink","to","components_Instructions","components_CountDownTimer","src_GameDisplay","src_CardContainer","setOppCard","WelcomePage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleButton","showLogIn","textAlign","height","verticalAlign","maxWidth","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","handleFormChange","type","createUserOrSignIn","Message","ScoreCard","images","Table","Row","Cell","image","rounded","userScore","key","value","HighScoreContainer","changeScoresToArray","obj","scores","entries","map","slicedToArray","basic","celled","collapsing","inverted","HeaderCell","Body","i","components_ScoreCard","App","username","password","event","defineProperty","target","createUser","userData","alert","renderWelcomeOrWelcomeBack","routerProps","src_WelcomePage","assign","_this3","react_router","exact","path","render","containers_HighScoreContainer","src_GameContainer","Boolean","window","location","hostname","match","ReactDOM","react_router_dom","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52b98b10.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Image, List} from 'semantic-ui-react'\n\n\nclass CharCard extends React.Component {\n\n  state = {\n    clickable: true,\n  }\n\n  handleClick = (attributeKey, attributeValue) => {\n    this.props.setCard(attributeKey, attributeValue)\n    this.setState({clickable: false})\n    \n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.card !== prevProps.card) {\n      this.setState({clickable: true})\n    }\n  }\n                 \n  render() {    \n\n    return (\n     <Card>\n      <div className=\"char-img\">\n       <Image src={this.props.card.imageurl} wrapped ui={false} className=\"Medium\" />\n       </div>\n        <Card.Content>\n          <Card.Header name=\"name\" className=\"char-name\">{this.props.card.name}</Card.Header>\n              \n          <Card.Description className=\"card-description\">\n            {this.props.card.description}\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n        <List>\n          <List.Item>\n            <List.Content className=\"flicker-1\" onClick={this.state.clickable ? (() => this.handleClick('apperception', this.props.card.apperception)) : null}>Apperception: {this.props.card.apperception}</List.Content>\n          </List.Item>\n          <List.Item>\n            <List.Content className=\"flicker-2\" onClick={this.state.clickable ? (() => this.handleClick('charm', this.props.card.charm)) : null}>Charm: {this.props.card.charm}</List.Content>\n          </List.Item>\n          <List.Item>\n            <List.Content className=\"flicker-3\" onClick={this.state.clickable ? (() => this.handleClick('aggression', this.props.card.aggression)) : null}>Aggression: {this.props.card.aggression}</List.Content>\n          </List.Item>\n        </List>\n      </Card.Content>\n     </Card>\n      \n    )\n  }\n}\n\n\n\nexport default CharCard;\n","import React from 'react';\nimport { Card, Image, List} from 'semantic-ui-react'\n\n\n\nclass OpponentCard extends React.Component {\n\n                 \n  render() {\n    return (\n     <Card>\n      <div className=\"char-img\">\n       <Image src={this.props.card.imageurl} wrapped ui={false} />\n      </div>\n        <Card.Content>\n          <Card.Header name=\"name\" className=\"char-name\">{this.props.card.name}</Card.Header>\n              \n          <Card.Description className=\"card-description\">\n            {this.props.card.description}\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n        \n        <List>\n              <List.Item>\n              {this.props.showCardStats ? <List.Content>Apperception: {this.props.card.apperception}</List.Content> : '?' }\n              </List.Item>\n              <List.Item>\n              {this.props.showCardStats ? <List.Content>Charm: {this.props.card.charm}</List.Content> : '?' }\n              </List.Item>\n              <List.Item>\n              {this.props.showCardStats ? <List.Content>Aggression: {this.props.card.aggression}</List.Content> : '?' }\n              </List.Item>\n        </List> \n      </Card.Content>\n     </Card>\n      \n    )\n  }\n}\n\n\n\nexport default OpponentCard;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react'\n\n\n\nclass GameDisplay extends React.Component {\n\n                 \n  render() {\n    return (\n      <Header as='h3' block>\n        {this.props.currentUser} has {this.props.cardCount} cards remaining\n      </Header>\n    )\n  }\n}\n\n\n\nexport default GameDisplay;\n","\n\n//const endpoint = 'http://localhost:3000/api/v1/'\nconst endpoint = 'https://safe-anchorage-93805.herokuapp.com/api/v1'\nconst cardsUrl = `${endpoint}/cards`\n//Sam's Auth code:\nconst signupUrl = `${endpoint}/users`\nconst loginUrl = `${endpoint}/login`\nconst validateUrl = `${endpoint}/validate`\nconst totalsUrl = `${endpoint}/totals`\nconst gameUrl = `${endpoint}/games`\n\n\n//const postsUrl = `${endpoint}/posts`\n\nconst jsonify = res => {\n  // return res.json()\n  if (res.ok)\n    return res.json()\n  else {\n    const jsonData = res.json()\n    return jsonData.then(data => {\n      if (data.errors) {\n        throw data.errors\n      } else {\n        return data\n      }\n    })\n  }\n}\n\nconst handleServerError = errors => {\n  console.error(errors)\n  throw errors\n} //only called in catch\n\nconst cards = () => {\n  return fetch(cardsUrl)\n    .then(jsonify)\n    // .then(console.log)\n    .catch(handleServerError)\n}\n//Sam's Auth Code...\nconst constructHeaders = (moreHeaders = {}) => (\n  {\n    'Authorization': localStorage.getItem('token'),\n    ...moreHeaders\n  }\n)\n\nconst signUp = (user) => fetch(signupUrl, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({ user })\n}).then(jsonify)\n  .then(data => {\n    console.log(\"token: \", data.token)\n    localStorage.setItem('token', data.token)\n    return data.user\n  })\n  .catch(handleServerError)\n\n\nconst logIn = (user) => fetch(loginUrl, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({ user })\n}).then(jsonify)\n  .then(data => {\n    console.log(\"token: \", data.token)\n    localStorage.setItem('token', data.token)\n    return data.user\n  })\n  .catch(handleServerError)                       //WHY don't we save token to localStorage here?\n\nconst validateUser = () => {\n  if (!localStorage.getItem('token')) return Promise.resolve({ error: 'no token' })\n\n  return fetch(validateUrl, {\n    headers: constructHeaders()\n  }).then(jsonify)\n    .then(data => {\n      localStorage.setItem('token', data.token)\n      return data.user\n    })\n    .catch(handleServerError)\n}\n\nconst fetchTotalScores = () => {\n  return fetch(totalsUrl)\n    .then(jsonify)\n    .catch(handleServerError)\n}\n\nconst postGame = (game) => fetch(gameUrl, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({ game })\n}).then(jsonify)\n  .then(game => {\n    console.log(\"game: \", game)\n    return game\n  })\n  .catch(handleServerError)\n\nconst clearToken = () => localStorage.removeItem('token')\n\nexport default {\n  signUp,\n  logIn,\n  validateUser,\n  clearToken,\n  cards,\n  fetchTotalScores,\n  postGame\n}\n\n\n\n","import React, { Component } from 'react';\nimport CharCard from './CharCard'\n\nimport OpponentCard from './OpponentCard'\nimport HandStatus from './HandStatus'\nimport { Grid, Divider, Button } from 'semantic-ui-react'\nimport { NavLink } from \"react-router-dom\";\nimport API from './API'\n//import { Redirect } from 'react-router-dom'\n\nclass CardContainer extends Component {\n\n\n  render() {\n    console.log(\"CardContainer has rendered\")\n\n    const allCards = this.props.allCards\n    const { currentUser } = this.props\n\n    return (\n      \n      <>\n        <h2> {currentUser ? `Logged in as ${currentUser}` : null}</h2>\n \n              <Grid columns={2} relaxed='very'>\n                <Grid.Column>\n                  <h1>Your Card</h1>\n                  <CharCard \n                    card={this.props.userCard} \n                    setCard={this.props.setUserCard}\n                    setClickStatusTrue={this.props.setClickStatusTrue}\n                  />\n                  <HandStatus \n                    currentUser={this.props.currentUser}\n                    cardCount={this.props.userCardCount}\n                  />\n                  \n                </Grid.Column>\n                \n                <Grid.Column>\n                  <h1>Opponent Card</h1>\n                  <OpponentCard \n                    card={this.props.oppCard} \n                    showCardStats={this.props.showCardStats}\n                  />\n                  <HandStatus \n                    user=\"Computer\"\n                    cardCount={this.props.oppCardCount}\n                  />\n                  \n                </Grid.Column>\n                \n              </Grid>\n              <Divider vertical>vs</Divider>\n              \n\n              \n      \n      </>\n    );\n  }\n}\n\nexport default CardContainer;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react'\n\n\n\nclass GameDisplay extends React.Component {\n\n\n  render() {\n    let divStyle\n    if (this.props.gameStatus === \"Let the battle commence...\"){\n      divStyle = {\n        color: 'black',\n      }\n    }\n    else if (this.props.winOrLose === \"win\") {\n      divStyle = {\n        color: 'green',\n      }\n    } else if (this.props.winOrLose === \"lose\") {\n      divStyle = {\n        color: 'red',\n      }\n    } \n\n    return (\n      <Header style={divStyle} as='h3' block>\n        {/* { this.props.winOrLose === \"win\" ? color='green' : null} */}\n        {this.props.gameStatus}\n      </Header>\n    )\n  }\n}\n\n\n\nexport default GameDisplay;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react'\n\n\n\nclass WinMessage extends React.Component {\n\n                 \n  render() {\n    return (\n      <Header as='h3' block>\n        Congratulations {this.props.currentUser}! You Won! Score: {this.props.winningScore}\n      </Header>\n    )\n  }\n}\n\n\n\nexport default WinMessage;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react'\n\n\n\nclass LoseMessage extends React.Component {\n\n                 \n  render() {\n    return (\n      <Header as='h3' block>\n        {/* Unlucky, {this.props.currentUser}. You Lost! */}\n       {this.props.timerState === 0 ? \"Out of time! You Lost\" : \"You were defeated!\"}\n      </Header>\n    )\n  }\n}\n\n\n\nexport default LoseMessage;\n","import React, { Component } from 'react';\nimport  Timer from 'react-compound-timer';\n\nconst CountDownTimer = ({setTimerState}) =>{\n  \n    return (\n    \n        <Timer\n    initialTime={65000}\n    direction=\"backward\"\n    checkpoints = \t{[\n      {\n          time: 30000,\n          callback: () => {setTimerState(30)},\n      },\n      {\n          time: 10000,\n          callback: () => {setTimerState(10)},\n      },\n      {\n        time: 0,\n        callback: () => {setTimerState(0)},\n    }\n\n  ]} >\n    {({getTimerState}) => (\n        <React.Fragment>\n            {/* <Timer.Days /> days\n            <Timer.Hours /> hours */}\n            <Timer.Minutes /> minutes {\" \"}\n            <Timer.Seconds /> seconds\n            {/* <Timer.Milliseconds /> milliseconds */}\n          \n        </React.Fragment>\n    )}\n</Timer>\n    \n    );\n  \n}\n\nexport default CountDownTimer;","import React from 'react';\nimport { Container, Header } from 'semantic-ui-react'\n\nconst Instructions = () => {\n  return (\n    <div>\n        <Container text>\n          <br></br>\n    <Header as='h2'>Instructions</Header>\n    <p className='instructions'>\n     Welcome to WestWorld Showdown! The aim of the game is to to take all of your opponents cards as fast as possible! Click the attribute on your card that you think will be higher than your opponents card - if you're correct, you take their card. \n    </p>\n    \n    <p className='instructions'>\n    Collecting all cards before the timer is up means more points! If the timer runs out...you Lose! Good luck!\n    </p>\n  </Container>\n    </div>\n  );\n};\n\nexport default Instructions;","import React, { Component } from 'react';\nimport './App.css';\nimport CardContainer from './CardContainer'\nimport GameDisplay from './GameDisplay'\nimport WinMessage from './WinMessage'\nimport LoseMessage from './LoseMessage'\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from 'semantic-ui-react'\nimport API from \"./API.js\";\nimport CountDownTimer from './components/CountDownTimer';\nimport Instructions from './components/Instructions';\n\nclass GameContainer extends Component {\n  state ={\n    // currentUser: 'Chris',\n    allCards: [],\n    gameStatus: 'Let the battle commence...',\n    userIndexCounter: 0,\n    oppIndexCounter: 0,\n    userAllCards: [],\n    oppAllCards: [],\n    showCardStats: false,\n    gameStart: false,\n    userWon: false,\n    oppWon: false,\n    timerState: null,\n    winningScore: null,\n    winOrLose: null,\n    attributeClicked: true,\n  }\n\n  setClickStatusTrue = () => {\n    this.setState({attributeClicked: true})\n  }\n\n  componentDidMount(){\n    if (!localStorage.token) {\n      console.log(\"No Current User...redirecting back to welcome page\")\n          this.props.history.push('/')\n          return null\n    }  else {\n      this.getCards()\n       this.props.setCurrentUserFromToken()\n    }\n   \n   \n    //set User from token\n  }\n\n  setTimerState = (time) => {\n    this.setState({timerState: time })\n  }\n\n  getCards = () => {\n    API.cards().then(cards => this.setState({allCards: cards}))\n  }\n\n  startGame = () => {\n    const allCards = this.state.allCards\n    let newCards = this.shuffleArray(allCards)\n    const userCards = newCards.slice(allCards.length/2, allCards.length)\n    const oppCards = newCards.slice(0, allCards.length/2)\n    this.setState({\n      userIndexCounter: 0,\n      oppIndexCounter: 0,\n      gameStart: true,\n      userWon: false,\n      oppWon: false,\n      showCardStats: false,\n      userAllCards: userCards,\n      oppAllCards: oppCards,\n      gameStatus: 'Let the battle commence...'\n    })\n  }\n\n  shuffleArray = (allCards) => {\n    let currentIndex = allCards.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = allCards[currentIndex];\n    allCards[currentIndex] = allCards[randomIndex];\n    allCards[randomIndex] = temporaryValue;\n    }\n    return allCards;\n   }\n  \n   postGame = () => {\n     let timeLeft = this.state.timerState\n     let score = this.state.userWon ? 10 + timeLeft : 0\n     this.setState({winningScore: score})\n     let userId = this.props.currentUserObj.id\n      let game = {user_id: userId, score: score }\n      API.postGame(game)\n   }\n\n  setUserCard = (attributeKey, attributeValue) => {\n    this.setState({attributeClicked: true})\n    let userCardsLength = this.state.userAllCards.length -1\n    let oppCardsLength = this.state.oppAllCards.length -1\n    this.state.userIndexCounter < userCardsLength ? console.log(userCardsLength) : this.setState({userIndexCounter: 0})\n    this.state.oppIndexCounter < oppCardsLength ? console.log(oppCardsLength) : this.setState({oppIndexCounter: 0})\n    // check if indexCounter is < array.length, reset indexcounter in state if true.\n  \n    let userCard = this.state.userAllCards[this.state.userIndexCounter]\n    let oppCard = this.state.oppAllCards[this.state.oppIndexCounter]\n    // assign current visible cards based on index counter\n\n    this.setState({showCardStats: true})\n    // shows opponent card attributes\n    const winMatchUp = () => {\n      let winnerText = `${userCard.name} took down ${oppCard.name}! You took ownership of ${oppCard.name}`\n      this.setState({winOrLose: \"win\"})\n      let oppAllCards = this.state.oppAllCards\n      let continueGameOppCards = oppAllCards.filter(card => card.id !== oppCard.id)\n      // checking for empty array, if empty userWon = true and cards no longer render\n\nif (continueGameOppCards.length === 0){\n  this.setState({userWon: true}) \n  this.postGame()\n} else {\n  console.log('carry on')\n      \n}\n\n      this.setState({\n        gameStatus: winnerText, \n        userAllCards: [...this.state.userAllCards, oppCard], \n        oppAllCards: continueGameOppCards,\n        showCardStats: false,\n        userIndexCounter: (this.state.userIndexCounter < this.state.userAllCards.length ? this.state.userIndexCounter +1 : 0),\n      }) \n    }   \n\n    const loseMatchUp = () => {\n      let loserText = `${userCard.name} was brutally disabled by ${oppCard.name}! Your opponent took ownership of ${userCard.name}`\n      this.setState({winOrLose: \"lose\"})\n      let oldUserAllCards = this.state.userAllCards\n      let newUserCards = oldUserAllCards.filter(card => card.id !== userCard.id)\n \n      // checking for empty array, if empty oppWon = true and cards no longer render\n      if (newUserCards.length === 0 || this.state.timerState === 0){\n        this.setState({oppWon: true}) \n        this.postGame()\n      } else {\n        console.log('carry on')  \n      }\n\n      this.setState({\n        gameStatus: loserText, \n        oppAllCards: [...this.state.oppAllCards, userCard], \n        userAllCards: newUserCards, \n        showCardStats: false,\n        oppIndexCounter: (this.state.oppIndexCounter < this.state.oppAllCards.length ? this.state.oppIndexCounter +1 : 0),\n\n      }) \n    }  \n\n    (attributeValue > oppCard[attributeKey]) && this.state.attributeClicked === true ? setTimeout(winMatchUp, 500) : setTimeout(loseMatchUp, 500)\n\n    // if chosen attibute is greater than opponent card attribute run Win, else run Lose\n  }\n\n  handleClick = () => {\n    console.log(\"User logged out!!\")\n    this.props.clearUserState()\n    API.clearToken()\n  }\n\n  render() {\n    //const allCards = this.state.allCards\n    let userCard = this.state.userAllCards[this.state.userIndexCounter]\n    let oppCard = this.state.oppAllCards[this.state.oppIndexCounter]\n    const currentUser = this.props.currentUser\n    //const gameStatus = this.state.gameStatus\n    const userCardCount = this.state.userAllCards.length\n    const oppCardCount = this.state.oppAllCards.length\n    //const showCardStats = this.state.showCardStats\n    //const timerState = this.state.timerState\n    const {winningScore, timerState, gameStatus, allCards, showCardStats, winOrLose} = this.state\n\n    return (\n      <div className=\"App\">\n\n        {this.state.userWon ? <WinMessage winningScore={winningScore} currentUser={currentUser} /> : null}\n        {this.state.oppWon ? <LoseMessage timerState={timerState} currentUser={currentUser} /> : null}\n\n        <Button\n          as={NavLink}\n          to='/'\n          onClick={this.handleClick}\n        >Log Out</Button>\n        <Button\n          as={NavLink}\n          to='/scores'\n        >See Top Players!</Button>\n\n        \n        {this.state.gameStart && !this.state.oppWon && !this.state.userWon ? \n         <>\n\n         <CountDownTimer setTimerState={this.setTimerState}/>\n\n          <GameDisplay \n          currentUser={currentUser}\n          gameStatus={gameStatus}\n          winOrLose={winOrLose}\n          />\n\n          <CardContainer\n          // {...routerProps}\n          clearUserState={this.props.clearUserState} \n          currentUser={this.props.currentUser}\n          allCards={allCards} \n          userCard={userCard} \n          oppCard={oppCard}\n          userCardCount={userCardCount}\n          oppCardCount={oppCardCount}\n          setUserCard={this.setUserCard} \n          setOppCard={this.setOppCard}\n          showCardStats={showCardStats}\n          setClickStatusTrue={this.setClickStatusTrue}\n          \n          \n        />\n        </>\n        : \n        <>\n        <Button onClick={this.startGame}>Start the game!</Button>\n        \n        <Instructions/>\n        </>\n        \n        }\n\n        \n        \n      </div>\n    );\n  }\n}\n\nexport default GameContainer;\n","import React from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\n//import { NavLink} from \"react-router-dom\";\n\n\nclass WelcomePage extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { showLogIn: false }\n  }\n\n  toggleButton = () => {\n    this.setState({\n      showLogIn: !this.state.showLogIn\n    })\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      console.log(\"Token in localStorage ...redirecting to '/game'\")\n          this.props.history.push('/game')\n    }\n  }\n\n  render() {\n    console.log(\"The Welcome Page has rendered\") \n    return (\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <h1>Welcome to Westworld Showdown!</h1>\n          <Header as='h2' color='teal' textAlign='center'>\n            {/* <Image src='/logo2.png' />  */}\n            {this.state.showLogIn ? \"Log-in to your account\" : \"Welcome! Sign up below:\"}\n          </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input fluid icon='user'\n                iconPosition='left'\n                placeholder='User Name'\n                name='username'\n                onChange={this.props.handleFormChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                name='password'\n                onChange={this.props.handleFormChange}\n                type='password'\n              />\n          \n              <Button\n                color='teal'\n                fluid size='large'\n                onClick={() => this.props.createUserOrSignIn(this.state.showLogIn)}\n              >\n                {this.state.showLogIn ? \" Login\" : \" Sign Up\"}\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            {this.state.showLogIn ? \"New to us? \" : \"Already Regstered? \"}<Button\n              onClick={this.toggleButton}\n            >{this.state.showLogIn ? \"Go To Sign Up\" : \"Go To Login\"}</Button>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default WelcomePage;","import React from 'react';\nimport { Header, Image, Table } from 'semantic-ui-react'\n\nconst ScoreCard = (props) => {\n  let images = ['https://react.semantic-ui.com/images/avatar/small/lena.png' ,\n  'https://react.semantic-ui.com/images/avatar/small/matthew.png',\n  'https://react.semantic-ui.com/images/avatar/small/lindsay.png',\n  'https://react.semantic-ui.com/images/avatar/small/mark.png'\n  ]\n\n  return (\n    <Table.Row>\n    <Table.Cell>\n      <Header as='h2' image>\n        <Image src={images[Math.floor(Math.random()*images.length)]} rounded size='mini' />\n        <Header.Content>\n          {props.userScore.key}\n          {/* <Header.Subheader>Human Resources</Header.Subheader> */}\n        </Header.Content>\n      </Header>\n    </Table.Cell>\n    <Table.Cell>{props.userScore.value}</Table.Cell>\n  </Table.Row>\n  );\n};\n\nexport default ScoreCard;","import React, { Component } from 'react';\nimport API from '../API'\nimport { Header, Image, Table, Button } from 'semantic-ui-react'\nimport ScoreCard from '../components/ScoreCard';\nimport { NavLink } from \"react-router-dom\";\n\n\n\nclass HighScoreContainer extends Component {\n\n  componentDidMount() {\n    this.props.fetchTotalScores()\n  }\n\n  changeScoresToArray = () => {\n    let obj = this.props.scores\n    return Object.entries(obj).map(([key, value]) => ({key,value}));\n  }\n\n  render() {\n    //debugger\n    return (\n      <div>\n      <Button\n      as={NavLink}\n      to='/game'\n      onClick={this.handleClick}\n    >Go Back</Button>\n\n      <Table color={'white'} basic='very' celled collapsing inverted>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>UserName</Table.HeaderCell>\n        <Table.HeaderCell>Total Score</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n\n    <Table.Body>\n      {this.changeScoresToArray().map((userScore,i) => <ScoreCard key={i} userScore={userScore}/>)}\n      \n    </Table.Body>\n  </Table>\n  </div>\n    );\n  }\n}\n\nexport default HighScoreContainer;","\nimport React from 'react';\nimport './App.css';\nimport GameContainer from './GameContainer'\nimport API from \"./API.js\";\n\n\nimport { Route, Switch } from \"react-router-dom\";\nimport WelcomePage from \"./WelcomePage\";\nimport HighScoreContainer from './containers/HighScoreContainer';\n//const cardsURL = \"http://localhost:3000/api/v1/cards\";\nconst cardsURL = \"https://safe-anchorage-93805.herokuapp.com/api/v1/cards\";\n\nclass App extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    user: null,\n    scores: {}\n  }\n\n  componentDidMount(){\n    console.log(\"App has mounted\")\n    //this.setCurrentUserFromToken().then(data => this.fetchTotalScores())\n    this.fetchTotalScores().then(data => this.setCurrentUserFromToken())\n    //API.fetchTotalScores().then(scores => this.setState({scores}))\n  }\n\n  fetchTotalScores = () => {\n    return API.fetchTotalScores().then(scores => this.setState({scores}))\n  }\n\n  clearUserState = () => {\n    this.setState({\n      username: \"\",\n      password: \"\",\n      user: null\n    })\n  }\n\n  setCurrentUserFromToken = () => {\n    let token = localStorage.token ? localStorage.token : null\n\n    if (token){\n      API.validateUser().then(user => {\n        this.setState({user})\n      })  \n    }\n  }\n\n  handleFormChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  createUserOrSignIn = (showLogIn) => {\n\n    console.log(showLogIn ? \"Logging in...\" : \"Signing up...\")\n    let user = { username: this.state.username, password: this.state.password }\n    if (showLogIn) {\n      this.logIn(user)\n    }\n    else {\n      this.createUser(user)\n    }\n  }\n\n  createUser = user => {\n    API.signUp(user).then(userData => this.setState({ user: userData }))\n      .then(() => {\n        console.log(this.props.history)\n        this.props.history.push('/game')})\n      .catch(errors => {\n        this.setState({ errors })\n        alert(errors)\n      })\n  }\n\n  logIn = user => {\n    API.logIn(user).then(userData => this.setState({ user: userData }))\n      .then(() => this.props.history.push('/game'))\n      .catch(errors => {\n        this.setState({ errors })\n        alert(errors)\n      })\n  };\n\n  renderWelcomeOrWelcomeBack = (routerProps) => {\n    \n    return(\n      <WelcomePage {...routerProps}\n      handleFormChange={this.handleFormChange}\n      username={this.state.username}\n      password={this.state.password}\n      createUserOrSignIn={this.createUserOrSignIn}\n    />\n    )\n  }\n\n  render() {\n    console.log(\"APP HAS RENDERED\")\n\n  return (\n      <div className=\"App\">\n        {/* {this.state.errors} //REMOVE? */}\n        <header className=\"App-header\">\n          <React.Fragment>\n            {/* <HighScoreContainer/> */}\n            <h1>HELLO</h1>\n            <Switch>\n              <Route exact path=\"/test\" render={() => <h1>Home!</h1>} />\n              {/* <Route exact path=\"/scores\" component={HighScoreContainer} /> */}\n\n             \n              <Route exact path='/' render={routerProps =>\n               {return this.renderWelcomeOrWelcomeBack(routerProps)}\n              }\n              />\n\n              <Route exact path='/scores' render={routerProps =>\n                <HighScoreContainer \n                  {...routerProps}  \n                  scores={this.state.scores}\n                  fetchTotalScores={this.fetchTotalScores}\n                />        \n              }\n              />\n              <Route exact path='/game' render={routerProps =>\n                <GameContainer \n                  {...routerProps}\n                  currentUser={this.state.username}\n                  currentUserObj={this.state.user}\n                  clearUserState={this.clearUserState} \n                  setCurrentUserFromToken={this.setCurrentUserFromToken}\n                />        \n              }\n              />\n            </Switch>\n          </React.Fragment>\n        </header>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n//import WelcomePage from './WelcomePage';\n\n\n ReactDOM.render((\n   <>\n  <Router>\n   \n      <Route path='/' component={App} />\n    \n  </Router></>),\n  document.getElementById('root')\n );\n \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}